
services:
  gateway:
    container_name: gateway
    build:
      context: ./gateway
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@psg:5432/gateway_psg
    networks:
      - app-network

  

  auth:
    container_name: auth
    build:
      context: ./auth
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8001:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@psg:5432/auth_psg
    depends_on:
      - psg
    networks:
      - app-network


  users:
    container_name: users
    build:
      context: ./users
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8002:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@psg:5432/users_psg
    depends_on:
      - psg
    networks:
      - app-network



  product:
    container_name: product
    build:
      context: ./product
    command: >
      sh -c "python manage.py makemigrations && 
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000" 
    ports:
      - "8003:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@psg:5432/product_psg
    depends_on:
      - psg
    networks:
      - app-network

  review:
    build:
      context: ./review
    container_name: review
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             python review_app/worker.py &&
             python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8004:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@psg:5432/review_psg
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
    depends_on:
      - psg
      - rabbitmq
    networks:
      - app-network

  admin:
    build: 
      context: ./admin
    container_name: admin
    command: >
      sh -c "python manage.py makemigrations && 
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000" 
    ports:
      - "8005:8000"
    environment:
      - USERS_SERVICE_URL=http://users:8002
      - PRODUCTS_SERVICE_URL=http://products:8003
      - REVIEWS_SERVICE_URL=http://reviews:8004      
    depends_on:
      - psg
    networks:
      - app-network

  chat:
    build:
      context: ./chat
    container_name: chat
    ports:
      - "8006:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:password@psg:5432/chat_psg
      - REDIS_URL=redis://redis:6379
    depends_on:
      - psg
      - redis
    networks:
      - app-network



  psg:
    image: postgres:15
    container_name: psg
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: zxsa1234
    ports:
      - "5432:5432"
    networks:
      - app-network
    volumes:
      - psg_data:/var/lib/postgresql/data
      - ./init_scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app-network

  redis:
    image: redis:7
    container_name: chat_redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - app-network


networks:
  app-network:
    driver: bridge


volumes:
  psg_data:
